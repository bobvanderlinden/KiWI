win7_bcd =
"""H4sICMBR41YCA0JDRADtHFtsG8dxaT1Mv2lHsik/aVu25MdJd8fj8ZjYsRxbNm0njpCkjT5cQHwc
I9WWJUhKItcQoKI/QlEg+mgBfQX6VB8oDLQfQtG0QosWAgq06k8goB8VUATRR1Hor/qKOrN7S+6R
eyRPoVyg5RLUHnfvdmdmZ2ZnZuc0Zn+QCxJC8Euau395//lfAwG4bCCs4HUEL/rY9W1ik4/IEMlA
/YgkSYqMkSx8hsg4eUy+SUbIE/IhGYZeDfrfgN8jZIJe3YJnCfn1DxrNa19+0fbJ51/948K3/v2o
+DdO9VlR29jwxDCpl5qXj//Q2lWnQr3US73US73US73US73US73Uy/9HGUwPPaUXIaHRiQPg5fzW
1tbTx1dJ5Ls/X+BtnQ2E7HJu7YMLuGULr7EeDLD6qGSu/fB9aH/87sTImP3OyMgEts3Q8SNk4Dc/
zo+PgQY+vmW6xw/dl48fgQcuQv3cSGjZdNbSFTsezSiaZscUK5c1lZxtR/VYLJuLxzJTpGkTxnhx
gpAFZ/6lMz/Lz4/xjgMcv5h7/sgDVr8pwW83fN9Of9vOTIyTDbjnSS5AZqFRM1R1En6PPyZkAPBZ
ShByCO59QlFtnO6DesAZo4Ug7tcc/MOkjTSTAPvRFHHwxLtuwAgBRq2mIwIMxfcW3zPP6f37iTdF
fHnZckojth8D/ggU8MdynELFyj6MB9njmbGh0YmhEcZG6xTvXWQjwPpwLZEmHH/EXX1tZ/APVIH/
GsDx0ePdFIdQg/MMfB/Yzx6mhm3az2JVatFHfL6ZAH2m8blG5/l3n41P2MOErrtNnhKFfIO8C+2r
9P4DJfe/N2anJm6O88cK6yLIQXB36bpgRwgEicsB7w86Y0vWxUxHFYPz+XTb1L57wvgB55np3UVy
7Mh1SMLnOFfvE3vYfjoxLht3vUEO9xwAOLjLDfdBhx7YhuNqpgpFV1E+5w7K6dJzSD7+ZJMvutDn
OL/ON7K+SIjhxvnkIdJb43wyOuHgTRC+mXOE1svn2bpzWuoxVWXPN9J1hxEi+XV/NmrjGPhcfxN7
Pny2sh7caK5OD2KhelBL5VKJjJFQNDOVVoxULKMkVC2t6JpuqXo2lTBMdYrk9VTPHqanKD7dcrrP
NMnpvt7mi+6CHDH6NJKIiz7Yz/mK/HA8z1c4P6dxf2B7/MrXO9zMYJprZn2V6D990Oc+pGZsI5EA
gttU/tKaqaR12JFitppNAIfYsWxCpH8j430Z3gijjO4bbXJ56hPwxjWFYlbCb+CMT/6K2ynd1lIZ
RbdNTTHiuqWkUqmoYiXMbCKrphI51RbwGzjCYCnWj8hvgy1yflv30n/N/vlNqqcE/Ueaa6j/gh5y
0i1fr386vC+uF9c/2Le4h9kWgcK8Zgj6nxODmCQKX4vE4K8NVI1Bm0pycGUQjcThWiEpuIo6Vxa0
x+Fjwj0GyUCNT0zhisIdeKpjkAR8NJKG+23oT8OzOFoa2ky4ShMdWjJ0LhueycLdOlyr8CtGf7HR
YnC/Bb/StJfdjx/LGS0H7ThaBqAy4Ep37tbo3Fn4nYARdTqaW18U9Kldoi8iP/rtd/g6RPYXzrHC
RfLbE5evL9+HivXF3H7GU8t7WZ9sPuyTrfsLYEg+n7juQXHfi+Gyaxpfd2zb6GbwC+tO5WV2n5yf
veZfBGN2c798/hDnOzZ/FMcfOMjksq+18r4U2Ved3sA2Zp+bUdOKmbYSM9ScYmhxVUlpUfhjGfG4
mTMyZsyYkusDXE8ZfjOveOsDpFuxPliCcbg9uvAqW5vmGtujq5RPK9ujqA/J71gjrgHSvedgwU5F
PNRDJXywRe2jA/74YLYMHxA3HxirlO8biLWPtS069dIBVvPnRDinD5TA6WEHqSrKLT7H5Wumga0R
2o6i/RVw7GY2rj3sjJvvx7VaPViiHyldnoOes0G76PQ0OkV1kE51mkZ1UJzqHNSK+EEthxrIpDos
C/osBXWO6rWp/N4u2nlIh0ryQZp87qsxzUqkdbDWYrGYBXZDTlfSmZSh6NCsaemsnrD1qRL7KcTo
msohXVHGkD8WDxX8sVCY0Xc0zGiE/Sshx/8PFfn/QpHxl8z+Lt43SZX75tpfvt/B6TYalvPt5iHm
Nxbz7UlBf+o63Td1zhfYFz5R8O9E/Tl5vLJeSx7xae+Zdi4d09M5RYubJui1bFpJoeWn2nbMzuXi
ejob99BrmyE53kvnv55d3VDGrhbXE+fnPD0Q/Hp29ehhBtPGYfc+Kc6HfTJ8p1+R20efCnqq2D7C
vtUjpfLfX3P5x9Fy8DGhJU4tHxwjCvfE4Aqtliy1mdLUJkJbTIXxMHKg078ZuDMFT5uONmE1ldMj
rF7YW5kv11p88mU8lzPVuK0qRjQRUzTky7SatRXVQjdbzSRSpunBl7OveKxTsFZ82Uj5En/L+ATn
5/bb6FE33nwfq9Z+C7YwmGZavPkS+2T4hvd775t5/UP3zVxU3A9HW/m+lYtyvtwQxgh4yKMXHKGj
3nBw/8GBwxDtCt2xK+aOuvfrZBOHT1VF/bjR6g+u9daq4Ypxu2KzhbVNt7I6fJTVSbTDcm44V1tL
4eT9aEf1XCjV8yzutofFKo8V7JK7Hw5lb6Uyg7YQz5tt/9texHF/ByGff1LIQ4s48cwNkCUVBhiA
7yrAeaSKuPXaIZ/7vhO3VsvHraVyOk089k3iLacoW8Vy+jytx2XjW8fk468e2r4fPh9ffE0cn9ug
yVfddMNYsR8/XIybeNkT0x5xE1O0g5k9YXA+w76etlI+W4L+98kQeQo6f4R8TMaBa94B7T/uZEFG
yE0yCp8nNGcyRSagHiFP83ChvEXa5HTxgj98nMXQi+HfXwp/DMefP87mmWx29hvBv8Bn+hrkdtJm
mzwO5wXXmo94FJ+/H9pWTpTIN9VXMycLcOIYS8e97Hzc3XN0v87Q+IVCYxUpuh8bULP4QwJ2YRbX
0KHW6e6sw7rhcwbd16fyeOG8j8ggrFYaVnEMRh+CNeyCdX0G3wJdqrFfN4B5+66X0qVfpItG6aKJ
fg8hpXQp2kdDoj+FNvC8xPbm4cNkvqVUmhDOQ78w3qp0XugH77njzL8uxrunlE/zdjv2LZws5cdF
uh4fuyTtkbMaE7BCw2CJ6YTfMSZIYBd8JwnX9xXt/tM+9TboTF3LxqMKqG9DMTIm+Gu5uKVkYoaV
sixwpfWsh97eOOmxn576evZVU54vCnY/jeufkusZhIPzyOzZ7elfbmcNnnLs/1NuO0vUH9gnw5uc
keuP9jL8gn2rp+X7/yOQXZ5/Pkx5ZILyxYTAE1Qfnvagiwecc2eq17/5+EbQiW8E3fENfGY06OGn
npHrXy+4Ns9Ur39x/GTE8f8j3v6/S0+flevpSMStpwcjLyce43VO5EUfEAzP88c8fej5o5qWx5/c
+NC8gZ88zFSatwfA61Sq0/9LlF+aiXWWtQ2cdnjpHKuDZ1g9f4at5VKEwUyE8/2Xof9d/rwH3pYH
vY0ydhb2LZwrlYdliZ31FpXpEdD2z+DXbehNkQ/gjhEq42hvFfS9mL8i6vuedre+W3hQnZ2ubcNO
XzvnwR9N/vU9PT++wOqVwyX+dcgr7iPmuSA8+/i6XpLn8VSr9/vPO/rtvFvvi/Nhn9RubGd5MdXo
U1FvrrSX8onsfPFFuxx/L3gWz8vhkenRdYldAruDKurDyQte+hDP7HKwS8VA86XpqZ1Gz+ZM5/yO
RZRS+VM41H02PXfDSFScPpWFesrlT4SbWJz6tNPmdz0GL5bm/SD+RwT8i+Ot9CygQ74/9Fx09tmj
/tahp0MOx0MRjiiFIyrma6xfLOWLBee8NOFQNUutfzzhjDunmRjBs2kszwLaZuka5Ci9o/QEE882
keboS7jpvXzRH14DHvQVz2FYvERXxf03eFlO3/kOBsfSZcfPu8LquavEFW/y0gOefNDpLQcYXxTk
wBL5vedeCb/TfLtkp7/5k5fkdCrnN2Hfemfpfr3T+yLlA5/4LXVUxk938JunenYfGe1kOA9eZjox
coXV/e2sXm938iw6WD13j9kHfZfYWOsXmOyOXmSyk+xgvPay7IZq6LLcIee7a2X8AOxbuyyPz1Tv
Nz6BO1JwX8E/8AP3igfcLWXsHeybu1IK97rE3okL9owIj2jPhBR5vqqnPZPI2inL1DNKLJPNKoaN
5/GZjKbkono6ahhZI56IedgzL654xAU7tmfPDHSxWu122zO7SMjTnimGZw8/V9fddJi778+e6bzK
YFy8yvpYvkCE4DgY0wjUOn+1oYX0ksBauXyBR2DxinpuIMH13IjLb3yhMDrOnmASi/lXL44xfGR0
QxyleRXQPne/lJ8vS/hZZnctdBf8QnxmuquUz1ckfM7fGkcLPwU9aNVjDM5r3b3gn/WAv5xdSc8b
Lsj32WC3O26a7JLbGdXC198lh69cvJTuvWqpPVku35TL19yeUnuA+v9q+fP/nfTbq6HTygU5ncrZ
gUinviink3sdV1RGD3Q26W+nDl8jUjtRq4Gd6Affzm45vqX2oWr4kge9ajqaoj1t6S/Xng7r/ui1
oVaWI90Q7ag9ZNJgdtSGwnTAiy5W93U772uojBZLGqvndDbGQpTVgxpbA1675eW/yz+bVdNDc/mp
EcPLT8Uczjg9NclSPBQHO4PKP2aRslxOhBs1QYZmlVo039Sipy4GPWnZHj7wuBSfSn7AhvHy/YBR
yl8H6LsVmAOOOeuYi4+5i5iXhWedGEPC2AvW005MadViNeZWYQ4Y5uRgThHmKGOuNZ7XYi4H2jho
s2HMHs8evPIKZ+BL8xt5vO7eJ++J58XcThpMuu2kZY+8WLRXZHYStyvWYoW8stEbTI6TNwt5lmgP
oq9T6zxLbs9XyrP0c261qsjP6wKC36uzOLHJ8cP8h7keZofX+r2myE8vlcUPrzkcs69D/wPG97WE
Y2vrIXkPLLJKcHC+WHzNyZe+xvhCHifzty4rSuVzVO4vVzrn67O2915htELcF/k+1Mvqmd6dj8fz
dUfZwlh7rf0SvId/K71X+CQXJNYJRxefZPvpcpjVM21OvOI421+nLbZWkyEWj1g3mUxVwhPPUVDW
ao6nc10Jzzy9dzFebNwBef9zo4/3OAX+xj1EJjdBzdsfx7GL/HE6h9ufIGqRP0HjeZHrhX0G4x7I
g4EdoIf6aWvV+l18rxXpwfMHIzeL4gE98n2O63e+z4n2hPp63p5oEv3t9ZvOe0y3CvyB58NoszTU
nh5N1cijjB7L1zzO6a6xfaOcXo0yvRp9WfoM1wdtkVrz0yAZI9fBIq0l/fpMBm8x/UZF+hXF/bAv
0lMmflDFvP0e856TxGeoX3XXw//v8fb/Z+i+jRltGdi1P6JxmGdgcbk9HH3bHk4hRwNzq/D/CLr5
AN/NmX299nLE563EBzxfdfYGo+XqdSYL4RtsTYvzJJD2gzfl+SjvgD80nP9fiRHyNnABzwdEawjT
dWXrj7a19Hzsuvz84KsyfhH2Bd+QvFf21dbW9z47de/al18cFv8XI97zL2e8Bg+ZxXv+yF51qZku
2Fmeez+fJdZFbdLh0vwGwV/yon/yOtNR5eivS+g/c6tO/0r0r4b/+xJy/m8pc06NqnT6DpdPd1xw
/XZBjnGMQas6/ewFX78HfJXOsRZ6d+4cqxq4g71Vw23I86SKzv/vOHnO91i9ca8Qw/TKnxY5L0J6
oR//6+wY1ZWYy/eUTPjml/Ubcrwqxdutuy8vf8PXOiX95xHQ94pvyN8rXr/rb/6BO/L5xXw6FifR
dR53nb3p7Em9znm1Uy/dYbQP3WI6c/Y2k93ZuwyHUJKNtQy1IfET/ejtwTtyvS3CbZju+Gi5PMDn
NdOMjA8CAX/nzqN35OfOkrzGRCV88u9FP2Bjhmtsd3FqVOtno4+NPv/eGsOx9+/AH39qrRoO5Bek
yU7E9zp/VT0cGNtDX34n/OxkFXCsNJB6qZd6+R8p/wHeSGOyAGAAAA=="""

win10_bcd = """"""

import gzip
import base64
def write_bcd(bcd, path):
    data = gzip.decompress(base64.b64decode(bcd))
    filp = open(path, 'wb')
    filp.write(data)
    filp.close()
